// <auto-generated />
using System;
using Infrastructure.Data.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230803040214_FixTablePersonas")]
    partial class FixTablePersonas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Entities.AbonoPlan", b =>
                {
                    b.Property<int>("EstadoCuentaId")
                        .HasColumnType("int");

                    b.Property<int>("PlanPagoId")
                        .HasColumnType("int");

                    b.Property<decimal>("CuotaCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaIvaGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaIvaIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaIvaMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaMora")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EstadoCuentaId", "PlanPagoId");

                    b.HasIndex("PlanPagoId");

                    b.ToTable("AbonoPlanes");
                });

            modelBuilder.Entity("Core.Entities.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("Core.Entities.BitacoraPrestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("CambioEstado")
                        .HasColumnType("bit");

                    b.Property<string>("Comentarios")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("EstadoPrestamoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int?>("NuevoEstadoPrestamoId")
                        .HasColumnType("int");

                    b.Property<int>("PrestamoId")
                        .HasColumnType("int");

                    b.Property<byte>("TimeInStatus")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("EstadoPrestamoId");

                    b.HasIndex("NuevoEstadoPrestamoId");

                    b.HasIndex("PrestamoId");

                    b.ToTable("BitacoraPrestamos");
                });

            modelBuilder.Entity("Core.Entities.Caja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Cajas");
                });

            modelBuilder.Entity("Core.Entities.CanalIngreso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("CanalesIngresos");
                });

            modelBuilder.Entity("Core.Entities.ClienteHabitual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("ClientesHabituales");
                });

            modelBuilder.Entity("Core.Entities.ContactoEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApellidoCasada")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Celular")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int>("OcupacionId")
                        .HasColumnType("int");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("TelefonoPrincipal")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("OcupacionId");

                    b.ToTable("ContactosEmpresas");
                });

            modelBuilder.Entity("Core.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaisId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.HasIndex("RegionId");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("Core.Entities.DestinoPrestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DestinoPrestamos");
                });

            modelBuilder.Entity("Core.Entities.DetallePlanPagoTemporal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("CuotaCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaGastosAdministrativos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaIvaIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("Date");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<string>("PlanPagoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaldoCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCuota")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DetallePlanPagoTemporales");
                });

            modelBuilder.Entity("Core.Entities.DocumentosPrestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoPrestamoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoPrestamoId");

                    b.ToTable("DocumentosPrestamos");
                });

            modelBuilder.Entity("Core.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EntidadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicioOperaciones")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("MunicipioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SegmentoNegocioId")
                        .HasColumnType("int");

                    b.Property<int?>("SubSegmentoNegocioId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("EntidadId");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("SegmentoNegocioId");

                    b.HasIndex("SubSegmentoNegocioId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Core.Entities.EmpresaCelular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("EmpresasCelulares");
                });

            modelBuilder.Entity("Core.Entities.Entidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int>("TipoEntidadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoEntidadId");

                    b.ToTable("Entidades");
                });

            modelBuilder.Entity("Core.Entities.Escolaridad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Escolaridad");
                });

            modelBuilder.Entity("Core.Entities.EstadoCivil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EstadoCivil");
                });

            modelBuilder.Entity("Core.Entities.EstadoCuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Abono")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Cargo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int>("PrestamoId")
                        .HasColumnType("int");

                    b.Property<int?>("RegistroCajaId")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoAnterior")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoTransaccionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("PrestamoId");

                    b.HasIndex("RegistroCajaId");

                    b.HasIndex("TipoTransaccionId");

                    b.ToTable("EstadoCuentas");
                });

            modelBuilder.Entity("Core.Entities.EstadoPrestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EstadoPrestamos");
                });

            modelBuilder.Entity("Core.Entities.FormaPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("FormaPagos");
                });

            modelBuilder.Entity("Core.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Core.Entities.GrupoFamiliar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GrupoFamiliar");
                });

            modelBuilder.Entity("Core.Entities.Identity.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PersonaId")
                        .IsUnique()
                        .HasFilter("[PersonaId] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Identity.EstadoOrigen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EstadosOrigen");
                });

            modelBuilder.Entity("Core.Entities.InteresesDepartamentos", b =>
                {
                    b.Property<int>("TipoPrestamoId")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<decimal>("TasaMaxima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaMinima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaPredeterminada")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TipoPrestamoId", "DepartamentoId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("InteresesDepartamentos");
                });

            modelBuilder.Entity("Core.Entities.Moneda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Monedas");
                });

            modelBuilder.Entity("Core.Entities.MontoInteresado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("MontosInteresados");
                });

            modelBuilder.Entity("Core.Entities.MoraDepartamentos", b =>
                {
                    b.Property<int>("TipoPrestamoId")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<byte>("DiasGracia")
                        .HasColumnType("tinyint");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<decimal>("TasaMaxima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaMinima")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaPredeterminada")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TipoPrestamoId", "DepartamentoId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("MoraDepartamentos");
                });

            modelBuilder.Entity("Core.Entities.Municipio", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("Core.Entities.Ocupacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("Ocupaciones");
                });

            modelBuilder.Entity("Core.Entities.OcupacionSinFin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OcupacionSinFin");
                });

            modelBuilder.Entity("Core.Entities.OrigenIngreso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("OrigenIngresos");
                });

            modelBuilder.Entity("Core.Entities.OrigenSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("OrigenSolicitudes");
                });

            modelBuilder.Entity("Core.Entities.Pais", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nacionalidad")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Core.Entities.ParametrosDepartamentos", b =>
                {
                    b.Property<int>("TipoPrestamoId")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<byte>("DiaFinMes")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DiaInicioMes")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DiaQuincena")
                        .HasColumnType("tinyint");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<bool>("MontoFijo")
                        .HasColumnType("bit");

                    b.Property<decimal>("MontoMaximo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoMinimo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoPredeterminado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("MontoVariable")
                        .HasColumnType("bit");

                    b.Property<bool>("PlazoFijo")
                        .HasColumnType("bit");

                    b.Property<byte>("PlazoMaximo")
                        .HasColumnType("tinyint");

                    b.Property<byte>("PlazoMinimo")
                        .HasColumnType("tinyint");

                    b.Property<byte>("PlazoPredeterminado")
                        .HasColumnType("tinyint");

                    b.Property<bool>("PlazoVariable")
                        .HasColumnType("bit");

                    b.HasKey("TipoPrestamoId", "DepartamentoId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("ParametrosDepartamentos");
                });

            modelBuilder.Entity("Core.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApellidoCasada")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ClientesHabitualesId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoSAP")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Colonia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comentarios")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartamentoNegocioId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("DireccionNegocio")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<int?>("EntidadId")
                        .HasColumnType("int");

                    b.Property<int?>("EscolaridadId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoCivilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("FehaInicioNegocio")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GananciasMensuales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("GeneroId")
                        .HasColumnType("int");

                    b.Property<int?>("GrupoFamiliarId")
                        .HasColumnType("int");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("MunicipioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MunicipioNegocioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NIT")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NombreNegocio")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NumeroCelular")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("NumeroPersonasTrabajanId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroTelefono")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("NumeroTelefonoNegocio")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("OcupacionSinFinId")
                        .HasColumnType("int");

                    b.Property<string>("PaisNacimientoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("PoseeNegocio")
                        .HasColumnType("bit");

                    b.Property<bool>("PoseeRegistroSAT")
                        .HasColumnType("bit");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SegmentoNegocioId")
                        .HasColumnType("int");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SubSegmentoNegocioId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoViviendaId")
                        .HasColumnType("int");

                    b.Property<int?>("UbicacionNegocioId")
                        .HasColumnType("int");

                    b.Property<decimal>("VentasMensuales")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientesHabitualesId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("DepartamentoNegocioId");

                    b.HasIndex("EntidadId");

                    b.HasIndex("EscolaridadId");

                    b.HasIndex("EstadoCivilId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("GrupoFamiliarId");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("MunicipioNegocioId");

                    b.HasIndex("NumeroDocumento")
                        .IsUnique();

                    b.HasIndex("NumeroPersonasTrabajanId");

                    b.HasIndex("OcupacionSinFinId");

                    b.HasIndex("PaisNacimientoId");

                    b.HasIndex("SegmentoNegocioId");

                    b.HasIndex("SubSegmentoNegocioId");

                    b.HasIndex("TipoViviendaId");

                    b.HasIndex("UbicacionNegocioId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Core.Entities.PlanPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aplicado")
                        .HasColumnType("bit");

                    b.Property<decimal>("CuotaCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaIvaGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaIvaIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaIvaMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("Date");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<int>("PrestamoId")
                        .HasColumnType("int");

                    b.Property<int?>("RegistroCajaId")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIvaGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIvaIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIvaMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCuota")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PrestamoId");

                    b.HasIndex("RegistroCajaId");

                    b.ToTable("PlanPagos");
                });

            modelBuilder.Entity("Core.Entities.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CanalIngresoId")
                        .HasColumnType("int");

                    b.Property<int?>("DestinoPrestamoId")
                        .HasColumnType("int");

                    b.Property<int>("DiasMora")
                        .HasColumnType("int");

                    b.Property<int?>("EmpresaPrestamoId")
                        .HasColumnType("int");

                    b.Property<int?>("EntidadPrestamoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoOrigenId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoPrestamoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAprobacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDesembolso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPlan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GastosProyectados")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("GestorPrestamoId")
                        .HasColumnType("int");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<decimal>("InteresProyectado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IvaProyectado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MontoInteresadoId")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoOtorgado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoRealSolicitado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoTotalProyectado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ObjetivoCredito")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("OrigenIngresosId")
                        .HasColumnType("int");

                    b.Property<int?>("OrigenSolicitudId")
                        .HasColumnType("int");

                    b.Property<decimal>("OtrosIngresos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("Plazo")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ProductoInteresadoId")
                        .HasColumnType("int");

                    b.Property<string>("ReferenciaMigracion")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<decimal>("TasaGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaInteres")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TipoPrestamoId")
                        .HasColumnType("int");

                    b.Property<string>("TokenAutorización")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CanalIngresoId");

                    b.HasIndex("DestinoPrestamoId");

                    b.HasIndex("EmpresaPrestamoId");

                    b.HasIndex("EntidadPrestamoId");

                    b.HasIndex("EstadoOrigenId");

                    b.HasIndex("EstadoPrestamoId");

                    b.HasIndex("GestorPrestamoId");

                    b.HasIndex("MontoInteresadoId");

                    b.HasIndex("OrigenIngresosId");

                    b.HasIndex("OrigenSolicitudId");

                    b.HasIndex("ProductoInteresadoId");

                    b.HasIndex("TipoPrestamoId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Core.Entities.ProductoInteresado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ProductosInteresados");
                });

            modelBuilder.Entity("Core.Entities.ReferenciaPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoReferenciaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TipoReferenciaId");

                    b.ToTable("ReferenciasPersonas");
                });

            modelBuilder.Entity("Core.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Regiones");
                });

            modelBuilder.Entity("Core.Entities.RegistroCaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BancoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BatchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BatchKey")
                        .HasMaxLength(37)
                        .HasColumnType("nvarchar(37)");

                    b.Property<int>("CajaId")
                        .HasColumnType("int");

                    b.Property<byte>("CuotasAdelantadas")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CuotasVencidas")
                        .HasColumnType("tinyint");

                    b.Property<int>("DiasMora")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTransaccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<int>("FormaPagoId")
                        .HasColumnType("int");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<decimal>("MontoCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoCapitalAnticipado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoInteres")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoIvaGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoIvaIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoIvaMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoPago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MotivoAnulacion")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("PrestamoId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCuotasVencidas")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("BancoId");

                    b.HasIndex("CajaId");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("PrestamoId");

                    b.ToTable("RegistroCajas");
                });

            modelBuilder.Entity("Core.Entities.RelacionEntidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EntidadHijaId")
                        .HasColumnType("int");

                    b.Property<int>("EntidadPadreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int>("TipoRelacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntidadHijaId");

                    b.HasIndex("EntidadPadreId");

                    b.HasIndex("TipoRelacionId");

                    b.ToTable("RelacionEntidades");
                });

            modelBuilder.Entity("Core.Entities.SegmentoNegocio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SegmentoNegocios");
                });

            modelBuilder.Entity("Core.Entities.Sesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoBitacoraId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("TipoBitacoraId");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("Core.Entities.SubSegmentoNegocio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SegmentoNegocioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SegmentoNegocioId");

                    b.ToTable("SubSegmentoNegocios");
                });

            modelBuilder.Entity("Core.Entities.TipoBitacora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("TipoBitacoras");
                });

            modelBuilder.Entity("Core.Entities.TipoCuota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoCuotas");
                });

            modelBuilder.Entity("Core.Entities.TipoEntidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("TipoEntidades");
                });

            modelBuilder.Entity("Core.Entities.TipoPrestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("DisponibleOrganizaciones")
                        .HasColumnType("bit");

                    b.Property<bool>("DisponiblePersonas")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int?>("MonedaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal>("MontoMaximoComiteDirectores")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoMaximoComiteGerencia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoMaximoJefeCreditos")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoMinimoComiteDirectores")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoMinimoComiteGerencia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoMinimoJefeCreditos")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("ParametrosDepartamental")
                        .HasColumnType("bit");

                    b.Property<bool>("ParametrosGeneral")
                        .HasColumnType("bit");

                    b.Property<bool>("PermisosComiteDirectores")
                        .HasColumnType("bit");

                    b.Property<bool>("PermisosComiteGerencia")
                        .HasColumnType("bit");

                    b.Property<bool>("PermisosJefeCreditos")
                        .HasColumnType("bit");

                    b.Property<string>("TPA")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("TasaInteresDepartamental")
                        .HasColumnType("bit");

                    b.Property<bool>("TasaInteresFija")
                        .HasColumnType("bit");

                    b.Property<bool>("TasaInteresGeneral")
                        .HasColumnType("bit");

                    b.Property<bool>("TasaInteresVariable")
                        .HasColumnType("bit");

                    b.Property<decimal>("TasaIva")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TasaMoraDepartamental")
                        .HasColumnType("bit");

                    b.Property<bool>("TasaMoraFija")
                        .HasColumnType("bit");

                    b.Property<bool>("TasaMoraGeneral")
                        .HasColumnType("bit");

                    b.Property<bool>("TasaMoraVariable")
                        .HasColumnType("bit");

                    b.Property<int?>("TipoCuotaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonedaId");

                    b.HasIndex("TipoCuotaId");

                    b.ToTable("TipoPrestamos");
                });

            modelBuilder.Entity("Core.Entities.TipoReferencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("TipoReferencia");
                });

            modelBuilder.Entity("Core.Entities.TipoRelacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoRelacion");
                });

            modelBuilder.Entity("Core.Entities.TipoTransaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoTransaccion");
                });

            modelBuilder.Entity("Core.Entities.TipoVivienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("TiposVivienda");
                });

            modelBuilder.Entity("Core.Entities.UbicacionNegocio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.ToTable("UbicacionNegocios");
                });

            modelBuilder.Entity("Core.Entities.Views.AplicacionPagos", b =>
                {
                    b.Property<string>("ArchivoBatch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Banco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Capital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreditoId")
                        .HasColumnType("int");

                    b.Property<string>("Ejecutivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaBoleta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaTransaccion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Intereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IvaIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IvaMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCredito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalTransaccion")
                        .HasColumnType("decimal(18,2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Core.Entities.Views.BatchFile", b =>
                {
                    b.Property<DateTime>("BatchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BatchKey")
                        .HasColumnType("nvarchar(max)");

                    b.ToSqlQuery("Exec sp_batchfile_generator");
                });

            modelBuilder.Entity("Core.Entities.Views.Detalle", b =>
                {
                    b.Property<string>("BienOServicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CantidadUnidadesGravables1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CantidadUnidadesGravables2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodigoUnidadGravable1")
                        .HasColumnType("int");

                    b.Property<string>("CodigoUnidadGravable2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdentificadorDeRelacion")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoGravable1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MontoGravable2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontoImpuesto1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MontoImpuesto2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCorto1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCorto2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroLinea")
                        .HasColumnType("int");

                    b.Property<string>("OtrosDescuento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Core.Entities.Views.Encabezado", b =>
                {
                    b.Property<string>("AfiliacionIVA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoEstablecimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoMoneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoEmisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoReceptor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMISORCodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMISORDepartamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMISORDireccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMISORMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMISORPais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHoraEmision")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GranTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IDReceptor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdentificadorDeRelacion")
                        .HasColumnType("int");

                    b.Property<string>("NITEmisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEmisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreReceptor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroAcceso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RECEPTORCodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RECEPTORDepartamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RECEPTORDireccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RECEPTORMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RECEPTORPais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoEspecial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPersoneria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Core.Entities.Views.EstadoCuentaPrestamo", b =>
                {
                    b.Property<decimal>("Abono")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cargo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Concepto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrestamoId")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoAnterior")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoTransaccionId")
                        .HasColumnType("int");

                    b.ToView("VEstadoCuenta");
                });

            modelBuilder.Entity("Core.Entities.Views.Frases", b =>
                {
                    b.Property<int>("CodigoEscenario")
                        .HasColumnType("int");

                    b.Property<string>("FechaResolucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdentificadorDeRelacion")
                        .HasColumnType("int");

                    b.Property<string>("NumeroResolucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoFrase")
                        .HasColumnType("int");

                    b.ToView(null);
                });

            modelBuilder.Entity("Core.Entities.Views.ListadoAsesor", b =>
                {
                    b.Property<int>("EntidadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.ToView("v_mdi_lista__asesores");
                });

            modelBuilder.Entity("Core.Entities.Views.ListadoDeudores", b =>
                {
                    b.Property<string>("DPI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int");

                    b.Property<string>("NIT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEntidadId")
                        .HasColumnType("int");

                    b.ToView("v_sct_listadogeneral_deudores");
                });

            modelBuilder.Entity("Core.Entities.Views.ListadoEmpresaPlanilla", b =>
                {
                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("v_mdi_lista__empresas_con_planilla");
                });

            modelBuilder.Entity("Core.Entities.Views.ListadoGeneral", b =>
                {
                    b.Property<string>("Asesor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DPI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NIT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenciaMigracion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaldoActual")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoInicial")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoEntidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEntidadId")
                        .HasColumnType("int");

                    b.ToView("v_sct_listadogeneral");
                });

            modelBuilder.Entity("Core.Entities.Views.ListadoPersonas", b =>
                {
                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int");

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCelular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTelefonoLaboral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.ToView(null);
                });

            modelBuilder.Entity("Core.Entities.Views.ListadoProspectos", b =>
                {
                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CanalId")
                        .HasColumnType("int");

                    b.Property<string>("CanalNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DPI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntidadId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoPrestamoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("GestorAsignadoId")
                        .HasColumnType("int");

                    b.Property<string>("NIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProspecto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SolicitudId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TiempoEnEstado")
                        .HasColumnType("int");

                    b.Property<string>("TipoEntidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEntidadId")
                        .HasColumnType("int");

                    b.ToSqlQuery("Exec sp_ListadoProspectos");
                });

            modelBuilder.Entity("Core.Entities.Views.ReporteCasosBTS", b =>
                {
                    b.Property<decimal>("CuotaCalculada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DeudaTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DiasMora")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAprobacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDesembolso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPrimerPago")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gestor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPrestamo")
                        .HasColumnType("int");

                    b.Property<decimal>("InteresProyectado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IvaProyectado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoOtorgado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pagaduría")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Plazo")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ProximoPago")
                        .HasColumnType("datetime2");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaldoCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIvaIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIvaMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaInteres")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoPrestamo")
                        .HasColumnType("nvarchar(max)");

                    b.ToSqlQuery("declare @tAcum table (\r\n							Id int,\r\n							ReferenciaMigracion nvarchar(125) null,\r\n							DeudaTotal decimal(18, 2) default 0 null,\r\n							CapitalPrestado decimal(18, 2) default 0 null,\r\n							SaldoCapital decimal(18, 2) default 0 null,\r\n							InteresProyectado decimal(18, 2) default 0 null,\r\n							IvaProyectado decimal(18, 2) default 0 null,\r\n							GastosProyectados decimal(18, 2) default 0 null,\r\n							SaldoInteres decimal(18, 2) default 0 null,\r\n							SaldoIvaInteres decimal(18, 2) default 0 null,\r\n							Mora decimal(18, 2) default 0 null,\r\n							SaldoMora decimal(18, 2) default 0 null,\r\n							IvaMora decimal(18, 2) default 0 null,\r\n							SaldoIvaMora decimal(18, 2) default 0 null,\r\n							Gastos decimal(18, 2) default 0 null,\r\n							SaldoGastos decimal(18, 2) default 0 null,\r\n							IvaGastos decimal(18, 2) default 0 null,\r\n							SaldoIvaGastos decimal(18, 2) default 0 null\r\n						);\r\n							\r\ndeclare @tPrestamo table (ROWID int identity (1, 1) not null, PrestamoId int);\r\ndeclare @i int, @n int;\r\n	set nocount on;\r\n	insert into @tPrestamo (PrestamoID) select a.Id from Prestamos a;\r\n	set @n = @@ROWCOUNT;\r\n\r\n	set @i = 1;\r\n	while (@i <= @n)\r\n	begin\r\n		insert into @tAcum select * from SaldosMigracion( (select PrestamoId from @tPrestamo where ROWID = @i) );\r\n		set @i = @i + 1;\r\n	end;\r\n	\r\n	--if not object_id('test_al_aire') is null drop table test_al_aire;\r\n	\r\n	-- set nocount off;\r\n\r\n	select \r\n		pre.Id as IdPrestamo,\r\n		pre.ReferenciaMigracion as Referencia\r\n		, mdi.Nombre,\r\n		mdig.Nombre as Gestor,\r\n		pre.MontoOtorgado,\r\n		pre.TasaInteres,\r\n		pre.Plazo,\r\n		\r\n		pre.MontoTotalProyectado as DeudaTotal,\r\n		pre.InteresProyectado,\r\n		pre.IvaProyectado,\r\n		pre.DiasMora,\r\n		\r\n		acum.SaldoCapital\r\n		, acum.SaldoInteres as SaldoIntereses\r\n		, acum.SaldoIvaInteres as SaldoIvaIntereses\r\n		, acum.SaldoMora\r\n		, acum.SaldoIvaMora		\r\n		, estados.Nombre as Estado\r\n		, IsNull((Select Top 1 TotalCuota from PlanPagos where PrestamoId = pre.Id and Aplicado = 0), 0) as CuotaCalculada --Ajuste relizado por SAFC el 17/02/2023\r\n		, convert(date, pre.FechaAprobacion) as FechaAprobacion\r\n		, IsNull(convert(date, pre.FechaAprobacion), convert(date, pre.FechaDesembolso)) as FechaDesembolso\r\n		, IsNull(ppl.PROXIMO_PAGO, '0001-01-01') as ProximoPago\r\n		, IsNull(ppl2.PRIMER_PAGO, '0001-01-01') as FechaPrimerPago\r\n		, IsNull(ppl2.ULTIMO_PAGO, '0001-01-01') as FechaVencimiento\r\n		, IsNull(pagadu.Nombre, ' ') as [Pagaduría]\r\n		, tp.Nombre as TipoPrestamo\r\n	--into test_al_aire\r\n	\r\n	from \r\n		Prestamos as pre\r\n	Inner Join\r\n		v_mdi_general_full as mdi\r\n	on\r\n		mdi.EntidadId = pre.EntidadPrestamoId\r\n	Inner Join\r\n		v_mdi_general_full as mdig\r\n	on\r\n		mdig.EntidadId = pre.GestorPrestamoId\r\n	Inner Join\r\n		EstadoPrestamos as estados\r\n	on\r\n		estados.Id = pre.EstadoPrestamoId\r\n\r\n	left outer join @tAcum acum on acum.Id = pre.Id\r\n\r\n	left outer join (\r\n						select PrestamoId, min(FechaPago) as PROXIMO_PAGO\r\n						from PlanPagos\r\n						where Aplicado = 0\r\n						group by PrestamoId\r\n					) ppl on ppl.PrestamoId = pre.ID\r\n\r\n	left outer join (\r\n						select PrestamoId,  min(FechaPago) as PRIMER_PAGO, max(FechaPago) as ULTIMO_PAGO\r\n						from PlanPagos						\r\n						group by PrestamoId\r\n					) ppl2 on ppl2.PrestamoId = pre.ID\r\n\r\n	left outer join v_mdi_general_simple pagadu on pagadu.EntidadId = pre.EmpresaPrestamoId\r\n	inner join TipoPrestamos tp on tp.Id = pre.TipoPrestamoId\r\n	where\r\n		pre.EstadoPrestamoId = 1 or pre.EstadoPrestamoId = 7 or pre.EstadoPrestamoId = 8\r\n	order by pre.Id;\r\n	\r\n	set nocount off;");
                });

            modelBuilder.Entity("Core.Entities.Views.ReporteGeneralCreditos", b =>
                {
                    b.Property<decimal>("DeudaTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DiasMora")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gestor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPrestamo")
                        .HasColumnType("int");

                    b.Property<decimal>("InteresProyectado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IvaProyectado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoOtorgado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Plazo")
                        .HasColumnType("tinyint");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaldoCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIvaIntereses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIvaMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaInteres")
                        .HasColumnType("decimal(18,2)");

                    b.ToSqlQuery("Exec ReporteGeneralCreditos");
                });

            modelBuilder.Entity("Core.Entities.Views.ReporteTransUnion", b =>
                {
                    b.Property<string>("ApellidoDeCasada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Calificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Correlativo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dias_Mora")
                        .HasColumnType("int");

                    b.Property<decimal>("DirLabDivGeo1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DirLabDivGeo2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DirResDivGeo1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DirResDivGeo2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Direccion_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion_Laboral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_De_Apertura")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fecha_De_Castigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_De_Vencimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identificacion1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificacion2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificacion3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificacion4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificacion5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificador_TipoCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Monto_Pagado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Monto_Vencido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Completo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nuevo_Limite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero_Garantia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero_Obligacion")
                        .HasColumnType("int");

                    b.Property<string>("Periodo_Pago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tasa_Cambio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono_Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono_Laboral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono_Residencial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_Deudor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_Garantia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_Obligacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_Registro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_Sujeto")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("Valor_Cuota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Valor_Garantia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor_Limite")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Valor_Saldo_Mora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Valor_Saldo_Total")
                        .HasColumnType("decimal(18,2)");

                    b.ToSqlQuery("Exec sp_transunion__batchfile_generator");
                });

            modelBuilder.Entity("Core.Entities.Views.SaldosMigracion", b =>
                {
                    b.Property<decimal>("CapitalPrestado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DeudaTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Gastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GastosProyectados")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("InteresProyectado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IvaGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IvaMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IvaProyectado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferenciaMigracion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaldoCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoInteres")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIvaGastos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIvaInteres")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoIvaMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoMora")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable((string)null);
                });

            modelBuilder.Entity("Core.Entities.Views.TotalImpuestos", b =>
                {
                    b.Property<int>("IdentificadorDeRelacion")
                        .HasColumnType("int");

                    b.Property<string>("NombreCorto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalMontoImpuesto")
                        .HasColumnType("decimal(18,2)");

                    b.ToView(null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Core.Entities.AbonoPlan", b =>
                {
                    b.HasOne("Core.Entities.EstadoCuenta", "EstadoCuenta")
                        .WithMany("AbonoPlanes")
                        .HasForeignKey("EstadoCuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.PlanPago", "PlanPago")
                        .WithMany("AbonoPlanes")
                        .HasForeignKey("PlanPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoCuenta");

                    b.Navigation("PlanPago");
                });

            modelBuilder.Entity("Core.Entities.BitacoraPrestamo", b =>
                {
                    b.HasOne("Core.Entities.Identity.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("Core.Entities.EstadoPrestamo", "EstadoPrestamo")
                        .WithMany()
                        .HasForeignKey("EstadoPrestamoId");

                    b.HasOne("Core.Entities.EstadoPrestamo", "NuevoEstadoPrestamo")
                        .WithMany("NuevoEstadoPrestamos")
                        .HasForeignKey("NuevoEstadoPrestamoId");

                    b.HasOne("Core.Entities.Prestamo", "Prestamo")
                        .WithMany("BitacoraPrestamos")
                        .HasForeignKey("PrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("EstadoPrestamo");

                    b.Navigation("NuevoEstadoPrestamo");

                    b.Navigation("Prestamo");
                });

            modelBuilder.Entity("Core.Entities.ContactoEmpresa", b =>
                {
                    b.HasOne("Core.Entities.Empresa", "Empresa")
                        .WithMany("ContactoEmpresas")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("Core.Entities.Ocupacion", "Ocupacion")
                        .WithMany()
                        .HasForeignKey("OcupacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Ocupacion");
                });

            modelBuilder.Entity("Core.Entities.Departamento", b =>
                {
                    b.HasOne("Core.Entities.Pais", "Pais")
                        .WithMany("Departamentos")
                        .HasForeignKey("PaisId");

                    b.HasOne("Core.Entities.Region", "Region")
                        .WithMany("Departamentos")
                        .HasForeignKey("RegionId");

                    b.Navigation("Pais");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Core.Entities.DocumentosPrestamo", b =>
                {
                    b.HasOne("Core.Entities.TipoPrestamo", "TipoPrestamo")
                        .WithMany("DocumentosRequeridos")
                        .HasForeignKey("TipoPrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoPrestamo");
                });

            modelBuilder.Entity("Core.Entities.Empresa", b =>
                {
                    b.HasOne("Core.Entities.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("Core.Entities.Entidad", "Entidad")
                        .WithMany()
                        .HasForeignKey("EntidadId");

                    b.HasOne("Core.Entities.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId");

                    b.HasOne("Core.Entities.SegmentoNegocio", "SegmentoNegocio")
                        .WithMany()
                        .HasForeignKey("SegmentoNegocioId");

                    b.HasOne("Core.Entities.SubSegmentoNegocio", "SubSegmentoNegocio")
                        .WithMany()
                        .HasForeignKey("SubSegmentoNegocioId");

                    b.Navigation("Departamento");

                    b.Navigation("Entidad");

                    b.Navigation("Municipio");

                    b.Navigation("SegmentoNegocio");

                    b.Navigation("SubSegmentoNegocio");
                });

            modelBuilder.Entity("Core.Entities.Entidad", b =>
                {
                    b.HasOne("Core.Entities.TipoEntidad", "EntityType")
                        .WithMany("Entidades")
                        .HasForeignKey("TipoEntidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityType");
                });

            modelBuilder.Entity("Core.Entities.EstadoCuenta", b =>
                {
                    b.HasOne("Core.Entities.Identity.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("Core.Entities.Prestamo", "Prestamo")
                        .WithMany()
                        .HasForeignKey("PrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.RegistroCaja", "RegistroCaja")
                        .WithMany()
                        .HasForeignKey("RegistroCajaId");

                    b.HasOne("Core.Entities.TipoTransaccion", "TipoTransaccion")
                        .WithMany()
                        .HasForeignKey("TipoTransaccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Prestamo");

                    b.Navigation("RegistroCaja");

                    b.Navigation("TipoTransaccion");
                });

            modelBuilder.Entity("Core.Entities.Identity.AppUser", b =>
                {
                    b.HasOne("Core.Entities.Persona", null)
                        .WithOne("AppUser")
                        .HasForeignKey("Core.Entities.Identity.AppUser", "PersonaId");
                });

            modelBuilder.Entity("Core.Entities.InteresesDepartamentos", b =>
                {
                    b.HasOne("Core.Entities.Departamento", "Departamento")
                        .WithMany("InteresesDepartamentos")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.TipoPrestamo", "TipoPrestamo")
                        .WithMany("InteresesDepartamentos")
                        .HasForeignKey("TipoPrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("TipoPrestamo");
                });

            modelBuilder.Entity("Core.Entities.MoraDepartamentos", b =>
                {
                    b.HasOne("Core.Entities.Departamento", "Departamento")
                        .WithMany("MoraDepartamentos")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.TipoPrestamo", "TipoPrestamo")
                        .WithMany("MoraDepartamentos")
                        .HasForeignKey("TipoPrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("TipoPrestamo");
                });

            modelBuilder.Entity("Core.Entities.Municipio", b =>
                {
                    b.HasOne("Core.Entities.Departamento", "Departamento")
                        .WithMany("Municipios")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Core.Entities.ParametrosDepartamentos", b =>
                {
                    b.HasOne("Core.Entities.Departamento", "Departamento")
                        .WithMany("ParametrosDepartamentos")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.TipoPrestamo", "TipoPrestamo")
                        .WithMany("ParametrosDepartamentos")
                        .HasForeignKey("TipoPrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("TipoPrestamo");
                });

            modelBuilder.Entity("Core.Entities.Persona", b =>
                {
                    b.HasOne("Core.Entities.ClienteHabitual", "ClientesHabituales")
                        .WithMany()
                        .HasForeignKey("ClientesHabitualesId");

                    b.HasOne("Core.Entities.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("Core.Entities.Departamento", "DepartamentoNegocio")
                        .WithMany("DepartamentoNegocios")
                        .HasForeignKey("DepartamentoNegocioId");

                    b.HasOne("Core.Entities.Entidad", "Entidad")
                        .WithMany()
                        .HasForeignKey("EntidadId");

                    b.HasOne("Core.Entities.Escolaridad", "Escolaridad")
                        .WithMany()
                        .HasForeignKey("EscolaridadId");

                    b.HasOne("Core.Entities.EstadoCivil", "EstadoCivil")
                        .WithMany()
                        .HasForeignKey("EstadoCivilId");

                    b.HasOne("Core.Entities.Genero", "Genero")
                        .WithMany("Personas")
                        .HasForeignKey("GeneroId");

                    b.HasOne("Core.Entities.GrupoFamiliar", "GrupoFamiliar")
                        .WithMany()
                        .HasForeignKey("GrupoFamiliarId");

                    b.HasOne("Core.Entities.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId");

                    b.HasOne("Core.Entities.Municipio", "MunicipioNegocio")
                        .WithMany("MunicipioNegocios")
                        .HasForeignKey("MunicipioNegocioId");

                    b.HasOne("Core.Entities.GrupoFamiliar", "NumeroPersonasTrabajan")
                        .WithMany("TotalPersonasTrabajan")
                        .HasForeignKey("NumeroPersonasTrabajanId");

                    b.HasOne("Core.Entities.OcupacionSinFin", "OcupacionSinFin")
                        .WithMany()
                        .HasForeignKey("OcupacionSinFinId");

                    b.HasOne("Core.Entities.Pais", "PaisNacimiento")
                        .WithMany()
                        .HasForeignKey("PaisNacimientoId");

                    b.HasOne("Core.Entities.SegmentoNegocio", "SegmentoNegocio")
                        .WithMany()
                        .HasForeignKey("SegmentoNegocioId");

                    b.HasOne("Core.Entities.SubSegmentoNegocio", "SubSegmentoNegocio")
                        .WithMany()
                        .HasForeignKey("SubSegmentoNegocioId");

                    b.HasOne("Core.Entities.TipoVivienda", "TipoVivienda")
                        .WithMany("Personas")
                        .HasForeignKey("TipoViviendaId");

                    b.HasOne("Core.Entities.UbicacionNegocio", "UbicacionNegocio")
                        .WithMany()
                        .HasForeignKey("UbicacionNegocioId");

                    b.Navigation("ClientesHabituales");

                    b.Navigation("Departamento");

                    b.Navigation("DepartamentoNegocio");

                    b.Navigation("Entidad");

                    b.Navigation("Escolaridad");

                    b.Navigation("EstadoCivil");

                    b.Navigation("Genero");

                    b.Navigation("GrupoFamiliar");

                    b.Navigation("Municipio");

                    b.Navigation("MunicipioNegocio");

                    b.Navigation("NumeroPersonasTrabajan");

                    b.Navigation("OcupacionSinFin");

                    b.Navigation("PaisNacimiento");

                    b.Navigation("SegmentoNegocio");

                    b.Navigation("SubSegmentoNegocio");

                    b.Navigation("TipoVivienda");

                    b.Navigation("UbicacionNegocio");
                });

            modelBuilder.Entity("Core.Entities.PlanPago", b =>
                {
                    b.HasOne("Core.Entities.Prestamo", "Prestamo")
                        .WithMany()
                        .HasForeignKey("PrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.RegistroCaja", "RegistroCaja")
                        .WithMany()
                        .HasForeignKey("RegistroCajaId");

                    b.Navigation("Prestamo");

                    b.Navigation("RegistroCaja");
                });

            modelBuilder.Entity("Core.Entities.Prestamo", b =>
                {
                    b.HasOne("Core.Entities.Identity.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.CanalIngreso", "CanalIngreso")
                        .WithMany()
                        .HasForeignKey("CanalIngresoId");

                    b.HasOne("Core.Entities.DestinoPrestamo", "DestinoPrestamo")
                        .WithMany()
                        .HasForeignKey("DestinoPrestamoId");

                    b.HasOne("Core.Entities.Entidad", "EmpresaPrestamo")
                        .WithMany("EmpresasPrestamos")
                        .HasForeignKey("EmpresaPrestamoId");

                    b.HasOne("Core.Entities.Entidad", "EntidadPrestamo")
                        .WithMany("EntidadesPrestamos")
                        .HasForeignKey("EntidadPrestamoId");

                    b.HasOne("Core.Entities.Identity.EstadoOrigen", "EstadoOrigen")
                        .WithMany()
                        .HasForeignKey("EstadoOrigenId");

                    b.HasOne("Core.Entities.EstadoPrestamo", "EstadoPrestamo")
                        .WithMany("Prestamos")
                        .HasForeignKey("EstadoPrestamoId");

                    b.HasOne("Core.Entities.Entidad", "GestorPrestamo")
                        .WithMany("GestoresPrestamos")
                        .HasForeignKey("GestorPrestamoId");

                    b.HasOne("Core.Entities.MontoInteresado", "MontoInteresado")
                        .WithMany()
                        .HasForeignKey("MontoInteresadoId");

                    b.HasOne("Core.Entities.OrigenIngreso", "OrigenIngresos")
                        .WithMany()
                        .HasForeignKey("OrigenIngresosId");

                    b.HasOne("Core.Entities.OrigenSolicitud", "OrigenSolicitud")
                        .WithMany()
                        .HasForeignKey("OrigenSolicitudId");

                    b.HasOne("Core.Entities.ProductoInteresado", "ProductoInteresado")
                        .WithMany()
                        .HasForeignKey("ProductoInteresadoId");

                    b.HasOne("Core.Entities.TipoPrestamo", "TipoPrestamo")
                        .WithMany()
                        .HasForeignKey("TipoPrestamoId");

                    b.Navigation("AppUser");

                    b.Navigation("CanalIngreso");

                    b.Navigation("DestinoPrestamo");

                    b.Navigation("EmpresaPrestamo");

                    b.Navigation("EntidadPrestamo");

                    b.Navigation("EstadoOrigen");

                    b.Navigation("EstadoPrestamo");

                    b.Navigation("GestorPrestamo");

                    b.Navigation("MontoInteresado");

                    b.Navigation("OrigenIngresos");

                    b.Navigation("OrigenSolicitud");

                    b.Navigation("ProductoInteresado");

                    b.Navigation("TipoPrestamo");
                });

            modelBuilder.Entity("Core.Entities.ReferenciaPersona", b =>
                {
                    b.HasOne("Core.Entities.Persona", "Persona")
                        .WithMany("BitacoraPrestamos")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.TipoReferencia", "TipoReferencia")
                        .WithMany()
                        .HasForeignKey("TipoReferenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("TipoReferencia");
                });

            modelBuilder.Entity("Core.Entities.RegistroCaja", b =>
                {
                    b.HasOne("Core.Entities.Identity.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Banco", "Banco")
                        .WithMany()
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Caja", "Caja")
                        .WithMany()
                        .HasForeignKey("CajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.FormaPago", "FormaPago")
                        .WithMany()
                        .HasForeignKey("FormaPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Prestamo", "Prestamo")
                        .WithMany()
                        .HasForeignKey("PrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Banco");

                    b.Navigation("Caja");

                    b.Navigation("FormaPago");

                    b.Navigation("Prestamo");
                });

            modelBuilder.Entity("Core.Entities.RelacionEntidad", b =>
                {
                    b.HasOne("Core.Entities.Entidad", "EntidadHija")
                        .WithMany()
                        .HasForeignKey("EntidadHijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Entidad", "EntidadPadre")
                        .WithMany()
                        .HasForeignKey("EntidadPadreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.TipoRelacion", "TipoRelacion")
                        .WithMany("Entidades")
                        .HasForeignKey("TipoRelacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntidadHija");

                    b.Navigation("EntidadPadre");

                    b.Navigation("TipoRelacion");
                });

            modelBuilder.Entity("Core.Entities.Sesion", b =>
                {
                    b.HasOne("Core.Entities.Identity.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("Core.Entities.TipoBitacora", "TipoBitacora")
                        .WithMany()
                        .HasForeignKey("TipoBitacoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("TipoBitacora");
                });

            modelBuilder.Entity("Core.Entities.SubSegmentoNegocio", b =>
                {
                    b.HasOne("Core.Entities.SegmentoNegocio", "SegmentoNegocio")
                        .WithMany("SubSegmentoNegocios")
                        .HasForeignKey("SegmentoNegocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SegmentoNegocio");
                });

            modelBuilder.Entity("Core.Entities.TipoPrestamo", b =>
                {
                    b.HasOne("Core.Entities.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId");

                    b.HasOne("Core.Entities.TipoCuota", "TipoCuota")
                        .WithMany()
                        .HasForeignKey("TipoCuotaId");

                    b.Navigation("Moneda");

                    b.Navigation("TipoCuota");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Core.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Core.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Core.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Departamento", b =>
                {
                    b.Navigation("DepartamentoNegocios");

                    b.Navigation("InteresesDepartamentos");

                    b.Navigation("MoraDepartamentos");

                    b.Navigation("Municipios");

                    b.Navigation("ParametrosDepartamentos");
                });

            modelBuilder.Entity("Core.Entities.Empresa", b =>
                {
                    b.Navigation("ContactoEmpresas");
                });

            modelBuilder.Entity("Core.Entities.Entidad", b =>
                {
                    b.Navigation("EmpresasPrestamos");

                    b.Navigation("EntidadesPrestamos");

                    b.Navigation("GestoresPrestamos");
                });

            modelBuilder.Entity("Core.Entities.EstadoCuenta", b =>
                {
                    b.Navigation("AbonoPlanes");
                });

            modelBuilder.Entity("Core.Entities.EstadoPrestamo", b =>
                {
                    b.Navigation("NuevoEstadoPrestamos");

                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("Core.Entities.Genero", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Core.Entities.GrupoFamiliar", b =>
                {
                    b.Navigation("TotalPersonasTrabajan");
                });

            modelBuilder.Entity("Core.Entities.Municipio", b =>
                {
                    b.Navigation("MunicipioNegocios");
                });

            modelBuilder.Entity("Core.Entities.Pais", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("Core.Entities.Persona", b =>
                {
                    b.Navigation("AppUser");

                    b.Navigation("BitacoraPrestamos");
                });

            modelBuilder.Entity("Core.Entities.PlanPago", b =>
                {
                    b.Navigation("AbonoPlanes");
                });

            modelBuilder.Entity("Core.Entities.Prestamo", b =>
                {
                    b.Navigation("BitacoraPrestamos");
                });

            modelBuilder.Entity("Core.Entities.Region", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("Core.Entities.SegmentoNegocio", b =>
                {
                    b.Navigation("SubSegmentoNegocios");
                });

            modelBuilder.Entity("Core.Entities.TipoEntidad", b =>
                {
                    b.Navigation("Entidades");
                });

            modelBuilder.Entity("Core.Entities.TipoPrestamo", b =>
                {
                    b.Navigation("DocumentosRequeridos");

                    b.Navigation("InteresesDepartamentos");

                    b.Navigation("MoraDepartamentos");

                    b.Navigation("ParametrosDepartamentos");
                });

            modelBuilder.Entity("Core.Entities.TipoRelacion", b =>
                {
                    b.Navigation("Entidades");
                });

            modelBuilder.Entity("Core.Entities.TipoVivienda", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
